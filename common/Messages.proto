package tutorial;
message TestbeamMessage {
enum MESSAGE_TYPE{
    NO_MSG=0;
    INIT_REQ=1;
    INIT_RESP=2;
    START_EVENT_MAMBA_REQ=3;
    START_EVENT_MAMBA_RESP=4;
    START_EVENT_TIMEPIX_REQ=6;
    START_EVENT_TIMEPIX_RESP=7;
    STOP_EVENT_MAMBA_REQ=8;
    STOP_EVENT_MAMBA_RESP=9;
    STOP_EVENT_TIMEPIX_REQ=10;
    STOP_EVENT_TIMEPIX_RESP=11;
  }
  required MESSAGE_TYPE msgType = 1;
  required int64 seqNo = 2;
  optional InitDevice initDevice =3;
  optional StartEventReq startEventReq=4;
  optional StartEventResp startEventResp=5;
  optional StopEventReq stopEventReq=6;
}

message InitDevice
{
enum DeviceType
{
	UNKNOWN=0;
	MAMBA=1;
	TELESCOPE=2;
}
required DeviceType deviceType=1;
}

message StartEventReq
{
enum RunType
{
    CUSTOM=0;
    BIAS=1;
    ANGLE=2;
} 
required RunType runType=1;
required int32 dutRunNumber=2;
required int32 biasVoltage=3;
required int32 angle=4;
required int32 stageX=5;
required int32 stageY=6;
required double temperature=7;
required int32 sector=8;
required string sensorName=9;
required string operatorName=10;

} 

message StartEventResp
{
  required int32 keplerRunNumber=1;
}


message StopEventReq
{
   required bool isGood=1;
}
